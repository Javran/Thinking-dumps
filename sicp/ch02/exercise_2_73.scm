(load "../common/utils.scm")

(define variable? symbol?)
(define (same-variable? v1 v2)
  (and (variable? v1)
       (variable? v2)
       (eq? v1 v2)))
(define (make-sum a1 a2)
  (list '+ a1 a2))
(define (make-product m1 m2)
  (list '* m1 m2))
(define (sum? x)
  (and (non-empty? x) (eq? (car x) '+)))
(define (product? x)
  (and (non-empty? x) (eq? (car x) '*)))
(define addend cadr)
(define augend caddr)
(define multiplier cadr)
(define multiplicand caddr)

(define (deriv-1 exp var)
  (cond ((number? exp) 0)
        ((variable? exp)
          (if (same-variable? exp var) 1 0))
        ((sum? exp)
          (make-sum (deriv-1 (addend exp) var)
                    (deriv-1 (augend exp) var)))
        ((product? exp)
          (make-sum (make-product
                      (multiplier exp)
                      (deriv-1 (multiplicand exp) var))
                    (make-product
                      (deriv-1 (multiplier exp) var)
                      (multiplicand exp))))
        ; (more rules can be added here)
        (else (error "unknown expression type: DERIV-1" exp))))

(out (deriv-1 '(+ x 3) 'x))

(end-script)
