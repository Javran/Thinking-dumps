;; this file is generated by running the program
;; the "before" one is the original one
;; while the "after" one disables "preserving".
;; from "before" we can tell that it does not contain any
;; stack operations, therefore all stack operations
;; generated in "after" is unnecessary.

;;;; before
(assign proc (op lookup-variable-value) (const *) (reg env))
(assign val (const 4))
(assign argl (op list) (reg val))
(assign val (const 3))
(assign argl (op cons) (reg val) (reg argl))
(assign val (const 2))
(assign argl (op cons) (reg val) (reg argl))
(test (op primitive-procedure?) (reg proc))
(branch (label primitive-branch3))
compiled-branch2
(assign continue (label after-call1))
(assign val (op compiled-procedure-entry) (reg proc))
(goto (reg val))
primitive-branch3
(assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call1
;;;; after
(save continue)
(save env)
(save continue)
(assign proc (op lookup-variable-value) (const *) (reg env))
(restore continue)
(restore env)
(restore continue)
(save continue)
(save proc)
(save env)
(save continue)
(assign val (const 4))
(restore continue)
(assign argl (op list) (reg val))
(restore env)
(save env)
(save argl)
(save continue)
(assign val (const 3))
(restore continue)
(restore argl)
(assign argl (op cons) (reg val) (reg argl))
(restore env)
(save argl)
(save continue)
(assign val (const 2))
(restore continue)
(restore argl)
(assign argl (op cons) (reg val) (reg argl))
(restore proc)
(restore continue)
(test (op primitive-procedure?) (reg proc))
(branch (label primitive-branch225))
compiled-branch224
(assign continue (label after-call223))
(assign val (op compiled-procedure-entry) (reg proc))
(goto (reg val))
primitive-branch225
(save continue)
(assign val (op apply-primitive-procedure) (reg proc) (reg argl))
(restore continue)
after-call223
